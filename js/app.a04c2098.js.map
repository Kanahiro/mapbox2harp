{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5eda","webpack:///./src/components/Harp.vue?17f1","webpack:///./src/components/Mapbox.vue?9fa0","webpack:///./src/App.vue","webpack:///./src/components/Harp.vue","webpack:///../src/defnitions.ts","webpack:///../src/index.ts","webpack:///./src/components/style.ts","webpack:///./src/components/Harp.vue?3293","webpack:///./src/components/Harp.vue?97b9","webpack:///./src/components/Mapbox.vue","webpack:///./src/components/Mapbox.vue?5c70","webpack:///./src/components/Mapbox.vue?0d04","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?eabf","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","ExpressionNames","PX_TO_METER_MULTIPLIER","mapbox2harp","mapboxStyle","styleName","undefined","sources","layers","Error","vectorSourceIds","keys","filter","sourceId","type","styles","layer","includes","source","map","mbLayer2harpStyle","style","Boolean","harpStyle","mapboxLayer","baseStyle","technique","when","translateMapboxExpr","color","getHarpColorBy","opacity","getHarpOpacityBy","metricUnit","getLineTechnique","getLineStyleAttributes","paint","lineWidth","attributes","Number","mapboxExpression","Array","isArray","expression","ops","String","isStyleFunctionInvalid","reduce","pre","current","mapstyle","version","metadata","collapsed","center","zoom","bearing","pitch","openmaptiles","url","takeshima","hoppo","sprite","glyphs","layout","visibility","base","stops","minzoom","maxzoom","props","setup","context","theme","console","log","canvas","document","getElementById","projection","target","zoomLevel","minZoomLevel","maxZoomLevel","dataSource","baseUrl","apiFormat","TomtomV1","styleSetName","addDataSource","render","__scopeId","Map","container","minZoom","on","e","features","queryRenderedFeatures","point","components","Harp","Mapbox","App","mount"],"mappings":"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","file":"js/app.a04c2098.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=605007b7&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Harp.vue?vue&type=style&index=0&id=1e5d079a&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Mapbox.vue?vue&type=style&index=0&id=47b84754&scoped=true&lang=css\"","<template>\n    <div id=\"wrapper\">\n        <Mapbox id=\"mapbox\" />\n        <Harp id=\"harp\" />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Harp from './components/Harp.vue';\nimport Mapbox from './components/Mapbox.vue';\n\nexport default defineComponent({\n    name: 'App',\n    components: {\n        Harp,\n        Mapbox,\n    },\n});\n</script>\n\n<style scoped>\n#wrapper {\n    height: 1000px;\n}\n#harp {\n    height: 100%;\n    width: 50%;\n    display: inline-block;\n}\n#mapbox {\n    height: 100%;\n    width: 50%;\n    display: inline-block;\n}\n</style>\n","<template>\n    <div id=\"wrapper\">\n        harp.gl\n        <canvas id=\"mapCanvas\" />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted } from 'vue';\n\nimport { MapView } from '@here/harp-mapview';\nimport { MapControls, MapControlsUI } from '@here/harp-map-controls';\nimport { GeoCoordinates, sphereProjection } from '@here/harp-geoutils';\nimport { OmvDataSource, APIFormat } from '@here/harp-omv-datasource';\nimport { Theme } from '@here/harp-datasource-protocol';\n\nimport mapbox2harp from '../../../src';\nimport { mapstyle } from './style';\n\nexport default defineComponent({\n    name: 'Harp',\n    props: {},\n    setup(props, context) {\n        const theme = mapbox2harp(mapstyle as mapboxgl.Style, 'osm');\n        console.log(theme);\n        onMounted(() => {\n            const canvas = document.getElementById(\n                'mapCanvas',\n            ) as HTMLCanvasElement;\n\n            // instantiate MapView\n            const map = new MapView({\n                canvas: canvas,\n                theme: theme as Theme,\n                projection: sphereProjection,\n                target: new GeoCoordinates(35.68, 139.77),\n                zoomLevel: 13.3,\n                minZoomLevel: 5,\n                maxZoomLevel: 18,\n            });\n\n            // add controls\n            const controls = new MapControls(map);\n\n            // add vectortile datasource\n            // https://tile.openstreetmap.jp/data/japan/{z}/{x}/{y}.pbf\n            const dataSource = new OmvDataSource({\n                baseUrl: 'https://tile.openstreetmap.jp/data/japan',\n                apiFormat: APIFormat.TomtomV1,\n                styleSetName: 'osm',\n            });\n            map.addDataSource(dataSource);\n        });\n    },\n});\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#mapCanvas {\n    height: 100%;\n    width: 100%;\n}\n</style>\n","const ExpressionNames = [\n    // Types\n    'array',\n    'boolean',\n    'collator',\n    'format',\n    'literal',\n    'number',\n    'object',\n    'string',\n    'image',\n    'to-boolean',\n    'to-color',\n    'to-number',\n    'to-string',\n    'typeof',\n    // Feature data\n    'feature-state',\n    'geometry-type',\n    'id',\n    'line-progress',\n    'properties',\n    // Lookup\n    'at',\n    'get',\n    'has',\n    'in',\n    '!in',\n    'index-of',\n    'length',\n    'slice',\n    // Decision\n    '!',\n    '!=',\n    '<',\n    '<=',\n    '==',\n    '>',\n    '>=',\n    'all',\n    'any',\n    'case',\n    'match',\n    'coalesce',\n    // Ramps, scales, curves\n    'interpolate',\n    'interpolate-hcl',\n    'interpolate-lab',\n    'step',\n    // Variable binding\n    'let',\n    'var',\n    // String\n    'concat',\n    'downcase',\n    'is-supported-script',\n    'resolved-locale',\n    'upcase',\n    // Color\n    'rgb',\n    'rgba',\n    // Math\n    '-',\n    '*',\n    '/',\n    '%',\n    '^',\n    '+',\n    'abs',\n    'acos',\n    'asin',\n    'atan',\n    'ceil',\n    'cos',\n    'e',\n    'floor',\n    'ln',\n    'ln2',\n    'log10',\n    'log2',\n    'max',\n    'min',\n    'pi',\n    'round',\n    'sin',\n    'sqrt',\n    'tan',\n    // Zoom, Heatmap\n    'zoom',\n    'heatmap-density',\n    // style function\n    'stops',\n    'property',\n    'base',\n    'type',\n    'default',\n    'colorSpace',\n    '$id',\n];\n\nexport { ExpressionNames };\n","import {\n    Theme,\n    Styles,\n    Style,\n    StyleAttributes,\n    Technique,\n    Expr,\n} from '@here/harp-datasource-protocol';\n\nimport { ExpressionNames } from './defnitions';\n\nconst PX_TO_METER_MULTIPLIER = 4;\n\ninterface MapboxVectorTileLayer extends mapboxgl.Layer {\n    source: string;\n    'source-layer': string;\n    type: 'symbol' | 'circle' | 'line' | 'fill' | 'fill-extrusion';\n}\n\ntype Expression = Array<number | string | Array<any>>;\n\nexport default function mapbox2harp(\n    mapboxStyle: mapboxgl.Style,\n    styleName: string,\n): Theme {\n    if (mapboxStyle.sources === undefined || mapboxStyle.layers === undefined)\n        throw Error('empty has no source or no layer.');\n\n    const vectorSourceIds = Object.keys(mapboxStyle.sources).filter(\n        (sourceId) => mapboxStyle.sources![sourceId].type === 'vector',\n    );\n\n    const styles: Array<Style> = (mapboxStyle.layers as MapboxVectorTileLayer[])\n        .filter((layer) => vectorSourceIds.includes(layer.source))\n        .map((layer) => mbLayer2harpStyle(layer))\n        .filter((style) => Boolean(style)) as Array<Style>;\n\n    const harpStyle: Theme = {\n        styles: {\n            [styleName]: styles,\n        },\n    };\n\n    return harpStyle;\n}\n\nfunction mbLayer2harpStyle(mapboxLayer: MapboxVectorTileLayer): Style | null {\n    const baseStyle: Style = {\n        id: mapboxLayer.id,\n        technique: 'circles',\n        layer: mapboxLayer['source-layer'],\n        when: translateMapboxExpr(mapboxLayer.filter),\n        color: getHarpColorBy(mapboxLayer) as string,\n        opacity: getHarpOpacityBy(mapboxLayer) as number,\n    };\n    if (baseStyle.color === null) {\n        return null;\n    }\n    switch (mapboxLayer.type) {\n        case 'symbol':\n            return {\n                ...baseStyle,\n                technique: 'circles',\n            };\n        case 'circle':\n            return {\n                ...baseStyle,\n                technique: 'circles',\n            };\n        case 'line':\n            return {\n                ...baseStyle,\n                metricUnit: 'Pixel', // deprecated\n                technique: getLineTechnique(mapboxLayer as mapboxgl.LineLayer),\n                ...getLineStyleAttributes(mapboxLayer as mapboxgl.LineLayer),\n            };\n        case 'fill':\n            return {\n                ...baseStyle,\n                technique: 'fill',\n            };\n        case 'fill-extrusion':\n            return {\n                ...baseStyle,\n                technique: 'extruded-polygon',\n            };\n    }\n}\n\nfunction getHarpColorBy(\n    mapboxLayer: MapboxVectorTileLayer,\n): string | object | Expression | null {\n    if (mapboxLayer.paint === undefined) {\n        return '#000000';\n    }\n    const color:\n        | string\n        | object\n        | Expression\n        | undefined = (mapboxLayer.paint as any)[`${mapboxLayer.type}-color`];\n    if (color === undefined) {\n        if ((mapboxLayer.paint as any)[`${mapboxLayer.type}-pattern`]) {\n            // TODO: sprite-pattern\n            return null;\n        }\n        return '#000000';\n    } else {\n        if (typeof color === 'string') {\n            return color;\n        } else {\n            return translateMapboxExpr(color);\n        }\n    }\n}\n\nfunction getHarpOpacityBy(\n    mapboxLayer: MapboxVectorTileLayer,\n): number | object | Expression {\n    if (mapboxLayer.paint === undefined) {\n        return 1.0;\n    }\n    const opacity:\n        | number\n        | object\n        | Expression\n        | undefined = (mapboxLayer.paint as any)[`${mapboxLayer.type}-opacity`];\n    if (opacity === undefined) return 1.0;\n    if (typeof opacity === 'number') {\n        return opacity;\n    } else {\n        return translateMapboxExpr(opacity);\n    }\n}\n\nfunction getLineTechnique(\n    mapboxLayer: mapboxgl.LineLayer,\n): 'solid-line' | 'dashed-line' {\n    if (mapboxLayer.paint?.['line-dasharray'] === undefined)\n        return 'solid-line';\n    return 'dashed-line';\n}\n\nfunction getLineStyleAttributes(mapboxLayer: mapboxgl.LineLayer): Object {\n    if (mapboxLayer.paint === undefined) {\n        return {\n            lineWidth: 1,\n        };\n    }\n    const attributes = {};\n    if (mapboxLayer.paint['line-width'] !== undefined) {\n        let lineWidth: number | Expression;\n        if (typeof mapboxLayer.paint['line-width'] === 'number') {\n            lineWidth = mapboxLayer.paint['line-width'];\n        } else {\n            //style function\n            lineWidth = translateMapboxExpr(mapboxLayer.paint['line-width']);\n        }\n        (attributes as any).lineWidth = lineWidth;\n    }\n    if (mapboxLayer.paint['line-dasharray'] !== undefined) {\n        (attributes as any)['dashSize'] =\n            Number(mapboxLayer.paint['line-dasharray'][0]) *\n            PX_TO_METER_MULTIPLIER;\n        (attributes as any)['gapSize'] =\n            Number(mapboxLayer.paint['line-dasharray'][1]) *\n            PX_TO_METER_MULTIPLIER;\n    }\n    return attributes;\n}\n\nfunction translateMapboxExpr(\n    mapboxExpression: { [key: string]: any } | Expression | undefined,\n): Expression {\n    if (mapboxExpression === undefined) return [];\n    if (Array.isArray(mapboxExpression)) {\n        let expression: Expression = [];\n\n        for (let i = 0; i < mapboxExpression.length; i++) {\n            const ops: number | string | Expression = mapboxExpression[i];\n            if (typeof ops === 'number') {\n                expression.push(ops);\n                continue;\n            }\n            if (typeof ops !== 'string') {\n                expression.push(translateMapboxExpr(ops));\n                continue;\n            }\n            if (ops === '$type') {\n                expression.push(['geometry-type']);\n                continue;\n            }\n            if (ExpressionNames.includes(ops)) {\n                expression.push(ops);\n                continue;\n            }\n            if (ExpressionNames.includes(String(mapboxExpression[i - 1]))) {\n                expression.push(['get', ops]);\n                continue;\n            }\n\n            if (mapboxExpression[0] === 'in' || mapboxExpression[0] === '!in') {\n                expression.push(['literal', mapboxExpression.slice(i)]);\n                break;\n            }\n            // string value\n            expression.push(ops);\n        }\n        return expression;\n    } else {\n        /**\n         * when style function, like following\n         * {\n                base: 1.2, // can be undefined\n                stops: [\n                    [12, 0.5],\n                    [13, 1],\n                    [14, 4],\n                    [20, 15],\n                ],\n            }\n         */\n        const isStyleFunctionInvalid =\n            mapboxExpression['stops'] === undefined &&\n            mapboxExpression['base'] === undefined;\n\n        if (isStyleFunctionInvalid) return [];\n\n        return [\n            'interpolate',\n            ['exponential', mapboxExpression['base'] || 1.0],\n            ['zoom'],\n            ...mapboxExpression['stops'].reduce(\n                (pre: any[], current: any[]) => {\n                    pre.push(...current);\n                    return pre;\n                },\n                [],\n            ),\n        ];\n    }\n}\n","export const mapstyle = {\n    version: 8,\n    name: 'Bright',\n    metadata: {\n        'mapbox:autocomposite': false,\n        'mapbox:groups': {\n            '1444849242106.713': { collapsed: false, name: 'Places' },\n            '1444849334699.1902': { collapsed: true, name: 'Bridges' },\n            '1444849345966.4436': { collapsed: false, name: 'Roads' },\n            '1444849354174.1904': { collapsed: true, name: 'Tunnels' },\n            '1444849364238.8171': { collapsed: false, name: 'Buildings' },\n            '1444849382550.77': { collapsed: false, name: 'Water' },\n            '1444849388993.3071': { collapsed: false, name: 'Land' },\n        },\n        'mapbox:type': 'template',\n        'openmaptiles:mapbox:owner': 'openmaptiles',\n        'openmaptiles:mapbox:source:url': 'mapbox://openmaptiles.4qljc88t',\n        'openmaptiles:version': '3.x',\n        'maputnik:renderer': 'mbgljs',\n    },\n    center: [0, 0],\n    zoom: 1,\n    bearing: 0,\n    pitch: 0,\n    sources: {\n        openmaptiles: {\n            type: 'vector',\n            url: 'https://tile.openstreetmap.jp/data/japan.json',\n        },\n        takeshima: {\n            type: 'vector',\n            url: 'https://tile.openstreetmap.jp/data/takeshima.json',\n        },\n        hoppo: {\n            type: 'vector',\n            url: 'https://tile.openstreetmap.jp/data/hoppo.json',\n        },\n    },\n    sprite: 'https://tile.openstreetmap.jp/styles/osm-bright/sprite',\n    glyphs: 'https://tile.openstreetmap.jp/fonts/{fontstack}/{range}.pbf',\n    layers: [\n        {\n            id: 'background',\n            type: 'background',\n            paint: { 'background-color': '#f8f4f0' },\n        },\n        {\n            id: 'landcover-glacier',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landcover',\n            filter: ['==', 'subclass', 'glacier'],\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-color': '#fff',\n                'fill-opacity': {\n                    base: 1,\n                    stops: [\n                        [0, 0.9],\n                        [10, 0.3],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'landuse-residential',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: [\n                'all',\n                ['in', 'class', 'residential', 'suburb', 'neighbourhood'],\n            ],\n            paint: {\n                'fill-color': {\n                    base: 1,\n                    stops: [\n                        [12, 'hsla(30, 19%, 90%, 0.4)'],\n                        [16, 'hsla(30, 19%, 90%, 0.2)'],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'landuse-commercial',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: [\n                'all',\n                ['==', '$type', 'Polygon'],\n                ['==', 'class', 'commercial'],\n            ],\n            paint: { 'fill-color': 'hsla(0, 60%, 87%, 0.23)' },\n        },\n        {\n            id: 'landuse-industrial',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: [\n                'all',\n                ['==', '$type', 'Polygon'],\n                ['==', 'class', 'industrial'],\n            ],\n            paint: { 'fill-color': 'hsla(49, 100%, 88%, 0.34)' },\n        },\n        {\n            id: 'landuse-cemetery',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: ['==', 'class', 'cemetery'],\n            paint: { 'fill-color': '#e0e4dd' },\n        },\n        {\n            id: 'landuse-hospital',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: ['==', 'class', 'hospital'],\n            paint: { 'fill-color': '#fde' },\n        },\n        {\n            id: 'landuse-school',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: ['==', 'class', 'school'],\n            paint: { 'fill-color': '#f0e8f8' },\n        },\n        {\n            id: 'landuse-railway',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landuse',\n            filter: ['==', 'class', 'railway'],\n            paint: { 'fill-color': 'hsla(30, 19%, 90%, 0.4)' },\n        },\n        {\n            id: 'landcover-wood',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landcover',\n            filter: ['==', 'class', 'wood'],\n            paint: {\n                'fill-antialias': {\n                    base: 1,\n                    stops: [\n                        [0, false],\n                        [9, true],\n                    ],\n                },\n                'fill-color': '#6a4',\n                'fill-opacity': 0.1,\n                'fill-outline-color': 'hsla(0, 0%, 0%, 0.03)',\n            },\n        },\n        {\n            id: 'landcover-grass',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'landcover',\n            filter: ['==', 'class', 'grass'],\n            paint: { 'fill-color': '#d8e8c8', 'fill-opacity': 1 },\n        },\n        {\n            id: 'landcover-grass-park',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'openmaptiles',\n            'source-layer': 'park',\n            filter: ['==', 'class', 'public_park'],\n            paint: { 'fill-color': '#d8e8c8', 'fill-opacity': 0.8 },\n        },\n        {\n            id: 'waterway_tunnel',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            minzoom: 14,\n            filter: [\n                'all',\n                ['in', 'class', 'river', 'stream', 'canal'],\n                ['==', 'brunnel', 'tunnel'],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-dasharray': [2, 4],\n                'line-width': {\n                    base: 1.3,\n                    stops: [\n                        [13, 0.5],\n                        [20, 6],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'waterway-other',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            filter: [\n                'all',\n                ['!in', 'class', 'canal', 'river', 'stream'],\n                ['==', 'intermittent', 0],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-width': {\n                    base: 1.3,\n                    stops: [\n                        [13, 0.5],\n                        [20, 2],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'waterway-other-intermittent',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            filter: [\n                'all',\n                ['!in', 'class', 'canal', 'river', 'stream'],\n                ['==', 'intermittent', 1],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-width': {\n                    base: 1.3,\n                    stops: [\n                        [13, 0.5],\n                        [20, 2],\n                    ],\n                },\n                'line-dasharray': [4, 3],\n            },\n        },\n        {\n            id: 'waterway-stream-canal',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            filter: [\n                'all',\n                ['in', 'class', 'canal', 'stream'],\n                ['!=', 'brunnel', 'tunnel'],\n                ['==', 'intermittent', 0],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-width': {\n                    base: 1.3,\n                    stops: [\n                        [13, 0.5],\n                        [20, 6],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'waterway-stream-canal-intermittent',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            filter: [\n                'all',\n                ['in', 'class', 'canal', 'stream'],\n                ['!=', 'brunnel', 'tunnel'],\n                ['==', 'intermittent', 1],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-width': {\n                    base: 1.3,\n                    stops: [\n                        [13, 0.5],\n                        [20, 6],\n                    ],\n                },\n                'line-dasharray': [4, 3],\n            },\n        },\n        {\n            id: 'waterway-river',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            filter: [\n                'all',\n                ['==', 'class', 'river'],\n                ['!=', 'brunnel', 'tunnel'],\n                ['==', 'intermittent', 0],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [10, 0.8],\n                        [20, 6],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'waterway-river-intermittent',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            filter: [\n                'all',\n                ['==', 'class', 'river'],\n                ['!=', 'brunnel', 'tunnel'],\n                ['==', 'intermittent', 1],\n            ],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#a0c8f0',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [10, 0.8],\n                        [20, 6],\n                    ],\n                },\n                'line-dasharray': [3, 2.5],\n            },\n        },\n        {\n            id: 'water-offset',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'water',\n            maxzoom: 8,\n            filter: ['==', '$type', 'Polygon'],\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-color': '#a0c8f0',\n                'fill-opacity': 1,\n                'fill-translate': {\n                    base: 1,\n                    stops: [\n                        [6, [2, 0]],\n                        [8, [0, 0]],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'water',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'water',\n            filter: ['all', ['!=', 'intermittent', 1]],\n            layout: { visibility: 'visible' },\n            paint: { 'fill-color': 'hsl(210, 67%, 85%)' },\n        },\n        {\n            id: 'water-intermittent',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'water',\n            filter: ['all', ['==', 'intermittent', 1]],\n            layout: { visibility: 'visible' },\n            paint: { 'fill-color': 'hsl(210, 67%, 85%)', 'fill-opacity': 0.7 },\n        },\n        {\n            id: 'water-pattern',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'water',\n            filter: ['all'],\n            layout: { visibility: 'visible' },\n            paint: { 'fill-pattern': 'wave', 'fill-translate': [0, 2.5] },\n        },\n        {\n            id: 'landcover-ice-shelf',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'landcover',\n            filter: ['==', 'subclass', 'ice_shelf'],\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-color': '#fff',\n                'fill-opacity': {\n                    base: 1,\n                    stops: [\n                        [0, 0.9],\n                        [10, 0.3],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'landcover-sand',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849382550.77' },\n            source: 'openmaptiles',\n            'source-layer': 'landcover',\n            filter: ['all', ['==', 'class', 'sand']],\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-color': 'rgba(245, 238, 188, 1)',\n                'fill-opacity': 1,\n            },\n        },\n        {\n            id: 'building',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849364238.8171' },\n            source: 'openmaptiles',\n            'source-layer': 'building',\n            paint: {\n                'fill-antialias': true,\n                'fill-color': {\n                    base: 1,\n                    stops: [\n                        [15.5, '#f2eae2'],\n                        [16, '#dfdbd7'],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'building-top',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849364238.8171' },\n            source: 'openmaptiles',\n            'source-layer': 'building',\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-color': '#f2eae2',\n                'fill-opacity': {\n                    base: 1,\n                    stops: [\n                        [13, 0],\n                        [16, 1],\n                    ],\n                },\n                'fill-outline-color': '#dfdbd7',\n                'fill-translate': {\n                    base: 1,\n                    stops: [\n                        [14, [0, 0]],\n                        [16, [-2, -2]],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-service-track-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['in', 'class', 'service', 'track'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#cfcdca',\n                'line-dasharray': [0.5, 0.25],\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15, 1],\n                        [16, 4],\n                        [20, 11],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-minor-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['==', 'class', 'minor'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#cfcdca',\n                'line-opacity': {\n                    stops: [\n                        [12, 0],\n                        [12.5, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12, 0.5],\n                        [13, 1],\n                        [14, 4],\n                        [20, 15],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-secondary-tertiary-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['in', 'class', 'secondary', 'tertiary'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [8, 1.5],\n                        [20, 17],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-trunk-primary-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['in', 'class', 'primary', 'trunk'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [5, 0.4],\n                        [6, 0.6],\n                        [7, 1.5],\n                        [20, 22],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-motorway-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['==', 'class', 'motorway'],\n            ],\n            layout: { 'line-join': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-dasharray': [0.5, 0.25],\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [5, 0.4],\n                        [6, 0.6],\n                        [7, 1.5],\n                        [20, 22],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-path',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['all', ['==', 'brunnel', 'tunnel'], ['==', 'class', 'path']],\n            ],\n            paint: {\n                'line-color': '#cba',\n                'line-dasharray': [1.5, 0.75],\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15, 1.2],\n                        [20, 4],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-service-track',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['in', 'class', 'service', 'track'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fff',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15.5, 0],\n                        [16, 2],\n                        [20, 7.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-minor',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['==', 'class', 'minor_road'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fff',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [13.5, 0],\n                        [14, 2.5],\n                        [20, 11.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-secondary-tertiary',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['in', 'class', 'secondary', 'tertiary'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fff4c6',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 10],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-trunk-primary',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['in', 'class', 'primary', 'trunk'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fff4c6',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-motorway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['==', 'class', 'motorway'],\n            ],\n            layout: { 'line-join': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': '#ffdaa6',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'tunnel-railway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849354174.1904' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'tunnel'],\n                ['==', 'class', 'rail'],\n            ],\n            paint: {\n                'line-color': '#bbb',\n                'line-dasharray': [2, 2],\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14, 0.4],\n                        [15, 0.75],\n                        [20, 2],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'ferry',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: ['all', ['in', 'class', 'ferry']],\n            layout: { 'line-join': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': 'rgba(108, 159, 182, 1)',\n                'line-dasharray': [2, 2],\n                'line-width': 1.1,\n            },\n        },\n        {\n            id: 'aeroway-taxiway-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'aeroway',\n            minzoom: 12,\n            filter: ['all', ['in', 'class', 'taxiway']],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': 'rgba(153, 153, 153, 1)',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.5,\n                    stops: [\n                        [11, 2],\n                        [17, 12],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'aeroway-runway-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'aeroway',\n            minzoom: 12,\n            filter: ['all', ['in', 'class', 'runway']],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': 'rgba(153, 153, 153, 1)',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.5,\n                    stops: [\n                        [11, 5],\n                        [17, 55],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'aeroway-area',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'aeroway',\n            minzoom: 4,\n            filter: [\n                'all',\n                ['==', '$type', 'Polygon'],\n                ['in', 'class', 'runway', 'taxiway'],\n            ],\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-color': 'rgba(255, 255, 255, 1)',\n                'fill-opacity': {\n                    base: 1,\n                    stops: [\n                        [13, 0],\n                        [14, 1],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'aeroway-taxiway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'aeroway',\n            minzoom: 4,\n            filter: [\n                'all',\n                ['in', 'class', 'taxiway'],\n                ['==', '$type', 'LineString'],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': 'rgba(255, 255, 255, 1)',\n                'line-opacity': {\n                    base: 1,\n                    stops: [\n                        [11, 0],\n                        [12, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.5,\n                    stops: [\n                        [11, 1],\n                        [17, 10],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'aeroway-runway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'aeroway',\n            minzoom: 4,\n            filter: [\n                'all',\n                ['in', 'class', 'runway'],\n                ['==', '$type', 'LineString'],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': 'rgba(255, 255, 255, 1)',\n                'line-opacity': {\n                    base: 1,\n                    stops: [\n                        [11, 0],\n                        [12, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.5,\n                    stops: [\n                        [11, 4],\n                        [17, 50],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'road_area_pier',\n            type: 'fill',\n            metadata: {},\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'Polygon'],\n                ['==', 'class', 'pier'],\n            ],\n            layout: { visibility: 'visible' },\n            paint: { 'fill-antialias': true, 'fill-color': '#f8f4f0' },\n        },\n        {\n            id: 'road_pier',\n            type: 'line',\n            metadata: {},\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['in', 'class', 'pier'],\n            ],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': '#f8f4f0',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15, 1],\n                        [17, 4],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-area',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'Polygon'],\n                ['!in', 'class', 'pier'],\n            ],\n            layout: { visibility: 'visible' },\n            paint: {\n                'fill-antialias': false,\n                'fill-color': 'hsla(0, 0%, 89%, 0.56)',\n                'fill-opacity': 0.9,\n                'fill-outline-color': '#cfcdca',\n            },\n        },\n        {\n            id: 'highway-motorway-link-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 12,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['==', 'class', 'motorway_link'],\n            ],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12, 1],\n                        [13, 3],\n                        [14, 4],\n                        [20, 15],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-link-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 13,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                [\n                    'in',\n                    'class',\n                    'primary_link',\n                    'secondary_link',\n                    'tertiary_link',\n                    'trunk_link',\n                ],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12, 1],\n                        [13, 3],\n                        [14, 4],\n                        [20, 15],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-minor-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!=', 'brunnel', 'tunnel'],\n                    ['in', 'class', 'minor', 'service', 'track'],\n                ],\n            ],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': '#cfcdca',\n                'line-opacity': {\n                    stops: [\n                        [12, 0],\n                        [12.5, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12, 0.5],\n                        [13, 1],\n                        [14, 4],\n                        [20, 15],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-secondary-tertiary-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['in', 'class', 'secondary', 'tertiary'],\n            ],\n            layout: {\n                'line-cap': 'butt',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [8, 1.5],\n                        [20, 17],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-primary-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 5,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['in', 'class', 'primary'],\n            ],\n            layout: {\n                'line-cap': 'butt',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': {\n                    stops: [\n                        [7, 0],\n                        [8, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [7, 0],\n                        [8, 0.6],\n                        [9, 1.5],\n                        [20, 22],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-trunk-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 5,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['in', 'class', 'trunk'],\n            ],\n            layout: {\n                'line-cap': 'butt',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': {\n                    stops: [\n                        [5, 0],\n                        [6, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [5, 0],\n                        [6, 0.6],\n                        [7, 1.5],\n                        [20, 22],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-motorway-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 4,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['==', 'class', 'motorway'],\n            ],\n            layout: {\n                'line-cap': 'butt',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': {\n                    stops: [\n                        [4, 0],\n                        [5, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [4, 0],\n                        [5, 0.4],\n                        [6, 0.6],\n                        [7, 1.5],\n                        [20, 22],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-path',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!in', 'brunnel', 'bridge', 'tunnel'],\n                    ['==', 'class', 'path'],\n                ],\n            ],\n            paint: {\n                'line-color': '#cba',\n                'line-dasharray': [1.5, 0.75],\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15, 1.2],\n                        [20, 4],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-motorway-link',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 12,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['==', 'class', 'motorway_link'],\n            ],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': '#fc8',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12.5, 0],\n                        [13, 1.5],\n                        [14, 2.5],\n                        [20, 11.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-link',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 13,\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                [\n                    'in',\n                    'class',\n                    'primary_link',\n                    'secondary_link',\n                    'tertiary_link',\n                    'trunk_link',\n                ],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12.5, 0],\n                        [13, 1.5],\n                        [14, 2.5],\n                        [20, 11.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-minor',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!=', 'brunnel', 'tunnel'],\n                    ['in', 'class', 'minor', 'service', 'track'],\n                ],\n            ],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': '#fff',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [13.5, 0],\n                        [14, 2.5],\n                        [20, 11.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-secondary-tertiary',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['!in', 'brunnel', 'bridge', 'tunnel'],\n                ['in', 'class', 'secondary', 'tertiary'],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [8, 0.5],\n                        [20, 13],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-primary',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!in', 'brunnel', 'bridge', 'tunnel'],\n                    ['in', 'class', 'primary'],\n                ],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [8.5, 0],\n                        [9, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-trunk',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!in', 'brunnel', 'bridge', 'tunnel'],\n                    ['in', 'class', 'trunk'],\n                ],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'highway-motorway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 5,\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!in', 'brunnel', 'bridge', 'tunnel'],\n                    ['==', 'class', 'motorway'],\n                ],\n            ],\n            layout: {\n                'line-cap': 'round',\n                'line-join': 'round',\n                visibility: 'visible',\n            },\n            paint: {\n                'line-color': '#fc8',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'railway-transit',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['==', 'class', 'transit'],\n                    ['!in', 'brunnel', 'tunnel'],\n                ],\n            ],\n            layout: { visibility: 'visible' },\n            paint: {\n                'line-color': 'hsla(0, 0%, 73%, 0.77)',\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14, 0.4],\n                        [20, 1],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'railway-transit-hatching',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['==', 'class', 'transit'],\n                    ['!in', 'brunnel', 'tunnel'],\n                ],\n            ],\n            layout: { visibility: 'visible' },\n            paint: {\n                'line-color': 'hsla(0, 0%, 73%, 0.68)',\n                'line-dasharray': [0.2, 8],\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14.5, 0],\n                        [15, 2],\n                        [20, 6],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'railway-service',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['all', ['==', 'class', 'rail'], ['has', 'service']],\n            ],\n            paint: {\n                'line-color': 'hsla(0, 0%, 73%, 0.77)',\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14, 0.4],\n                        [20, 1],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'railway-service-hatching',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['all', ['==', 'class', 'rail'], ['has', 'service']],\n            ],\n            layout: { visibility: 'visible' },\n            paint: {\n                'line-color': 'hsla(0, 0%, 73%, 0.68)',\n                'line-dasharray': [0.2, 8],\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14.5, 0],\n                        [15, 2],\n                        [20, 6],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'railway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!has', 'service'],\n                    ['!in', 'brunnel', 'bridge', 'tunnel'],\n                    ['==', 'class', 'rail'],\n                ],\n            ],\n            paint: {\n                'line-color': '#bbb',\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14, 0.4],\n                        [15, 0.75],\n                        [20, 2],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'railway-hatching',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849345966.4436' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                [\n                    'all',\n                    ['!has', 'service'],\n                    ['!in', 'brunnel', 'bridge', 'tunnel'],\n                    ['==', 'class', 'rail'],\n                ],\n            ],\n            paint: {\n                'line-color': '#bbb',\n                'line-dasharray': [0.2, 8],\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14.5, 0],\n                        [15, 3],\n                        [20, 8],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-motorway-link-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['==', 'class', 'motorway_link'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12, 1],\n                        [13, 3],\n                        [14, 4],\n                        [20, 15],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-link-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                [\n                    'in',\n                    'class',\n                    'primary_link',\n                    'secondary_link',\n                    'tertiary_link',\n                    'trunk_link',\n                ],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12, 1],\n                        [13, 3],\n                        [14, 4],\n                        [20, 15],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-secondary-tertiary-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['in', 'class', 'secondary', 'tertiary'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-opacity': 1,\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [8, 1.5],\n                        [20, 28],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-trunk-primary-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['in', 'class', 'primary', 'trunk'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': 'hsl(28, 76%, 67%)',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [5, 0.4],\n                        [6, 0.6],\n                        [7, 1.5],\n                        [20, 26],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-motorway-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['==', 'class', 'motorway'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#e9ac77',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [5, 0.4],\n                        [6, 0.6],\n                        [7, 1.5],\n                        [20, 22],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-path-casing',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['all', ['==', 'brunnel', 'bridge'], ['==', 'class', 'path']],\n            ],\n            paint: {\n                'line-color': '#f8f4f0',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15, 1.2],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-path',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['all', ['==', 'brunnel', 'bridge'], ['==', 'class', 'path']],\n            ],\n            paint: {\n                'line-color': '#cba',\n                'line-dasharray': [1.5, 0.75],\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [15, 1.2],\n                        [20, 4],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-motorway-link',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['==', 'class', 'motorway_link'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fc8',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12.5, 0],\n                        [13, 1.5],\n                        [14, 2.5],\n                        [20, 11.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-link',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                [\n                    'in',\n                    'class',\n                    'primary_link',\n                    'secondary_link',\n                    'tertiary_link',\n                    'trunk_link',\n                ],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [12.5, 0],\n                        [13, 1.5],\n                        [14, 2.5],\n                        [20, 11.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-secondary-tertiary',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['in', 'class', 'secondary', 'tertiary'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 20],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-trunk-primary',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['in', 'class', 'primary', 'trunk'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fea',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-motorway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['==', 'class', 'motorway'],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#fc8',\n                'line-width': {\n                    base: 1.2,\n                    stops: [\n                        [6.5, 0],\n                        [7, 0.5],\n                        [20, 18],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-railway',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['==', 'class', 'rail'],\n            ],\n            paint: {\n                'line-color': '#bbb',\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14, 0.4],\n                        [15, 0.75],\n                        [20, 2],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'bridge-railway-hatching',\n            type: 'line',\n            metadata: { 'mapbox:group': '1444849334699.1902' },\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            filter: [\n                'all',\n                ['==', 'brunnel', 'bridge'],\n                ['==', 'class', 'rail'],\n            ],\n            paint: {\n                'line-color': '#bbb',\n                'line-dasharray': [0.2, 8],\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [14.5, 0],\n                        [15, 3],\n                        [20, 8],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'cablecar',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 13,\n            filter: ['==', 'class', 'cable_car'],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': 'hsl(0, 0%, 70%)',\n                'line-width': {\n                    base: 1,\n                    stops: [\n                        [11, 1],\n                        [19, 2.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'cablecar-dash',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 13,\n            filter: ['==', 'class', 'cable_car'],\n            layout: { 'line-cap': 'round', visibility: 'visible' },\n            paint: {\n                'line-color': 'hsl(0, 0%, 70%)',\n                'line-dasharray': [2, 3],\n                'line-width': {\n                    base: 1,\n                    stops: [\n                        [11, 3],\n                        [19, 5.5],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'boundary-land-level-4',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'boundary',\n            filter: [\n                'all',\n                ['>=', 'admin_level', 4],\n                ['<=', 'admin_level', 8],\n                ['!=', 'maritime', 1],\n            ],\n            layout: { 'line-join': 'round' },\n            paint: {\n                'line-color': '#9e9cab',\n                'line-dasharray': [3, 1, 1, 1],\n                'line-width': {\n                    base: 1.4,\n                    stops: [\n                        [4, 0.4],\n                        [5, 1],\n                        [12, 3],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'boundary-land-level-2',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'boundary',\n            filter: [\n                'all',\n                ['==', 'admin_level', 2],\n                ['!=', 'maritime', 1],\n                ['!=', 'disputed', 1],\n            ],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': 'hsl(248, 7%, 66%)',\n                'line-width': {\n                    base: 1,\n                    stops: [\n                        [0, 0.6],\n                        [4, 1.4],\n                        [5, 2],\n                        [12, 8],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'boundary-land-disputed',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'boundary',\n            filter: ['all', ['!=', 'maritime', 1], ['==', 'disputed', 1]],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': 'hsl(248, 7%, 70%)',\n                'line-dasharray': [1, 3],\n                'line-width': {\n                    base: 1,\n                    stops: [\n                        [0, 0.6],\n                        [4, 1.4],\n                        [5, 2],\n                        [12, 8],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'boundary-water',\n            type: 'line',\n            source: 'openmaptiles',\n            'source-layer': 'boundary',\n            filter: ['all', ['in', 'admin_level', 2, 4], ['==', 'maritime', 1]],\n            layout: { 'line-cap': 'round', 'line-join': 'round' },\n            paint: {\n                'line-color': 'rgba(154, 189, 214, 1)',\n                'line-opacity': {\n                    stops: [\n                        [6, 0.6],\n                        [10, 1],\n                    ],\n                },\n                'line-width': {\n                    base: 1,\n                    stops: [\n                        [0, 0.6],\n                        [4, 1.4],\n                        [5, 2],\n                        [12, 8],\n                    ],\n                },\n            },\n        },\n        {\n            id: 'waterway-name',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'waterway',\n            minzoom: 13,\n            filter: ['all', ['==', '$type', 'LineString'], ['has', 'name']],\n            layout: {\n                'symbol-placement': 'line',\n                'symbol-spacing': 350,\n                'text-field': '{name:latin} {name:nonlatin}',\n                'text-font': ['migu1c-regular'],\n                'text-letter-spacing': 0.2,\n                'text-max-width': 5,\n                'text-rotation-alignment': 'map',\n                'text-size': 14,\n            },\n            paint: {\n                'text-color': '#74aee9',\n                'text-halo-color': 'rgba(255,255,255,0.7)',\n                'text-halo-width': 1.5,\n            },\n        },\n        {\n            id: 'water-name-lakeline',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'water_name',\n            filter: ['==', '$type', 'LineString'],\n            layout: {\n                'symbol-placement': 'line',\n                'symbol-spacing': 350,\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu1c-regular'],\n                'text-letter-spacing': 0.2,\n                'text-max-width': 5,\n                'text-rotation-alignment': 'map',\n                'text-size': 14,\n            },\n            paint: {\n                'text-color': '#74aee9',\n                'text-halo-color': 'rgba(255,255,255,0.7)',\n                'text-halo-width': 1.5,\n            },\n        },\n        {\n            id: 'water-name-ocean',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'water_name',\n            filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'ocean']],\n            layout: {\n                'symbol-placement': 'point',\n                'symbol-spacing': 350,\n                'text-field': '{name:latin}',\n                'text-font': ['migu1c-regular'],\n                'text-letter-spacing': 0.2,\n                'text-max-width': 5,\n                'text-rotation-alignment': 'map',\n                'text-size': 14,\n            },\n            paint: {\n                'text-color': '#74aee9',\n                'text-halo-color': 'rgba(255,255,255,0.7)',\n                'text-halo-width': 1.5,\n            },\n        },\n        {\n            id: 'water-name-other',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'water_name',\n            filter: [\n                'all',\n                ['==', '$type', 'Point'],\n                ['!in', 'class', 'ocean'],\n            ],\n            layout: {\n                'symbol-placement': 'point',\n                'symbol-spacing': 350,\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu1c-regular'],\n                'text-letter-spacing': 0.2,\n                'text-max-width': 5,\n                'text-rotation-alignment': 'map',\n                'text-size': {\n                    stops: [\n                        [0, 10],\n                        [6, 14],\n                    ],\n                },\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#74aee9',\n                'text-halo-color': 'rgba(255,255,255,0.7)',\n                'text-halo-width': 1.5,\n            },\n        },\n        {\n            id: 'poi-level-3',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'poi',\n            minzoom: 16,\n            filter: [\n                'all',\n                ['==', '$type', 'Point'],\n                ['>=', 'rank', 25],\n                ['any', ['!has', 'level'], ['==', 'level', 0]],\n            ],\n            layout: {\n                'icon-image': '{class}_11',\n                'text-anchor': 'top',\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 9,\n                'text-offset': [0, 0.6],\n                'text-padding': 2,\n                'text-size': 12,\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#666',\n                'text-halo-blur': 0.5,\n                'text-halo-color': '#ffffff',\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'poi-level-2',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'poi',\n            minzoom: 15,\n            filter: [\n                'all',\n                ['==', '$type', 'Point'],\n                ['<=', 'rank', 24],\n                ['>=', 'rank', 15],\n                ['any', ['!has', 'level'], ['==', 'level', 0]],\n            ],\n            layout: {\n                'icon-image': '{class}_11',\n                'text-anchor': 'top',\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 9,\n                'text-offset': [0, 0.6],\n                'text-padding': 2,\n                'text-size': 12,\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#666',\n                'text-halo-blur': 0.5,\n                'text-halo-color': '#ffffff',\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'poi-level-1',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'poi',\n            minzoom: 14,\n            filter: [\n                'all',\n                ['==', '$type', 'Point'],\n                ['<=', 'rank', 14],\n                ['has', 'name'],\n                ['any', ['!has', 'level'], ['==', 'level', 0]],\n            ],\n            layout: {\n                'icon-image': '{class}_11',\n                'text-anchor': 'top',\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 9,\n                'text-offset': [0, 0.6],\n                'text-padding': 2,\n                'text-size': 12,\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#666',\n                'text-halo-blur': 0.5,\n                'text-halo-color': '#ffffff',\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'poi-railway',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'poi',\n            minzoom: 13,\n            filter: [\n                'all',\n                ['==', '$type', 'Point'],\n                ['has', 'name'],\n                ['==', 'class', 'railway'],\n                ['==', 'subclass', 'station'],\n            ],\n            layout: {\n                'icon-allow-overlap': false,\n                'icon-ignore-placement': false,\n                'icon-image': '{class}_11',\n                'icon-optional': false,\n                'text-allow-overlap': false,\n                'text-anchor': 'top',\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-ignore-placement': false,\n                'text-max-width': 9,\n                'text-offset': [0, 0.6],\n                'text-optional': true,\n                'text-padding': 2,\n                'text-size': 12,\n            },\n            paint: {\n                'text-color': '#666',\n                'text-halo-blur': 0.5,\n                'text-halo-color': '#ffffff',\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'road_oneway',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 15,\n            filter: [\n                'all',\n                ['==', 'oneway', 1],\n                [\n                    'in',\n                    'class',\n                    'motorway',\n                    'trunk',\n                    'primary',\n                    'secondary',\n                    'tertiary',\n                    'minor',\n                    'service',\n                ],\n            ],\n            layout: {\n                'icon-image': 'oneway',\n                'icon-padding': 2,\n                'icon-rotate': 90,\n                'icon-rotation-alignment': 'map',\n                'icon-size': {\n                    stops: [\n                        [15, 0.5],\n                        [19, 1],\n                    ],\n                },\n                'symbol-placement': 'line',\n                'symbol-spacing': 75,\n            },\n            paint: { 'icon-opacity': 0.5 },\n        },\n        {\n            id: 'road_oneway_opposite',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation',\n            minzoom: 15,\n            filter: [\n                'all',\n                ['==', 'oneway', -1],\n                [\n                    'in',\n                    'class',\n                    'motorway',\n                    'trunk',\n                    'primary',\n                    'secondary',\n                    'tertiary',\n                    'minor',\n                    'service',\n                ],\n            ],\n            layout: {\n                'icon-image': 'oneway',\n                'icon-padding': 2,\n                'icon-rotate': -90,\n                'icon-rotation-alignment': 'map',\n                'icon-size': {\n                    stops: [\n                        [15, 0.5],\n                        [19, 1],\n                    ],\n                },\n                'symbol-placement': 'line',\n                'symbol-spacing': 75,\n            },\n            paint: { 'icon-opacity': 0.5 },\n        },\n        {\n            id: 'highway-name-path',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation_name',\n            minzoom: 15.5,\n            filter: ['==', 'class', 'path'],\n            layout: {\n                'symbol-placement': 'line',\n                'text-field': '{name:latin} {name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-rotation-alignment': 'map',\n                'text-size': {\n                    base: 1,\n                    stops: [\n                        [13, 12],\n                        [14, 13],\n                    ],\n                },\n            },\n            paint: {\n                'text-color': 'hsl(30, 23%, 62%)',\n                'text-halo-color': '#f8f4f0',\n                'text-halo-width': 0.5,\n            },\n        },\n        {\n            id: 'highway-name-minor',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation_name',\n            minzoom: 15,\n            filter: [\n                'all',\n                ['==', '$type', 'LineString'],\n                ['in', 'class', 'minor', 'service', 'track'],\n            ],\n            layout: {\n                'symbol-placement': 'line',\n                'text-field': '{name:latin} {name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-rotation-alignment': 'map',\n                'text-size': {\n                    base: 1,\n                    stops: [\n                        [13, 12],\n                        [14, 13],\n                    ],\n                },\n            },\n            paint: {\n                'text-color': '#765',\n                'text-halo-blur': 0.5,\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'highway-name-major',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation_name',\n            minzoom: 12.2,\n            filter: [\n                'in',\n                'class',\n                'primary',\n                'secondary',\n                'tertiary',\n                'trunk',\n            ],\n            layout: {\n                'symbol-placement': 'line',\n                'text-field': '{name:latin} {name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-rotation-alignment': 'map',\n                'text-size': {\n                    base: 1,\n                    stops: [\n                        [13, 12],\n                        [14, 13],\n                    ],\n                },\n            },\n            paint: {\n                'text-color': '#765',\n                'text-halo-blur': 0.5,\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'highway-shield',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation_name',\n            minzoom: 8,\n            filter: [\n                'all',\n                ['<=', 'ref_length', 6],\n                ['==', '$type', 'LineString'],\n                ['!in', 'network', 'us-interstate', 'us-highway', 'us-state'],\n            ],\n            layout: {\n                'icon-image': 'road_{ref_length}',\n                'icon-rotation-alignment': 'viewport',\n                'icon-size': 1,\n                'symbol-placement': {\n                    base: 1,\n                    stops: [\n                        [10, 'point'],\n                        [11, 'line'],\n                    ],\n                },\n                'symbol-spacing': 200,\n                'text-field': '{ref}',\n                'text-font': ['migu2m-regular'],\n                'text-rotation-alignment': 'viewport',\n                'text-size': 10,\n            },\n            paint: {},\n        },\n        {\n            id: 'highway-shield-us-interstate',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation_name',\n            minzoom: 7,\n            filter: [\n                'all',\n                ['<=', 'ref_length', 6],\n                ['==', '$type', 'LineString'],\n                ['in', 'network', 'us-interstate'],\n            ],\n            layout: {\n                'icon-image': '{network}_{ref_length}',\n                'icon-rotation-alignment': 'viewport',\n                'icon-size': 1,\n                'symbol-placement': {\n                    base: 1,\n                    stops: [\n                        [7, 'point'],\n                        [7, 'line'],\n                        [8, 'line'],\n                    ],\n                },\n                'symbol-spacing': 200,\n                'text-field': '{ref}',\n                'text-font': ['migu2m-regular'],\n                'text-rotation-alignment': 'viewport',\n                'text-size': 10,\n            },\n            paint: { 'text-color': 'rgba(0, 0, 0, 1)' },\n        },\n        {\n            id: 'highway-shield-us-other',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'transportation_name',\n            minzoom: 9,\n            filter: [\n                'all',\n                ['<=', 'ref_length', 6],\n                ['==', '$type', 'LineString'],\n                ['in', 'network', 'us-highway', 'us-state'],\n            ],\n            layout: {\n                'icon-image': '{network}_{ref_length}',\n                'icon-rotation-alignment': 'viewport',\n                'icon-size': 1,\n                'symbol-placement': {\n                    base: 1,\n                    stops: [\n                        [10, 'point'],\n                        [11, 'line'],\n                    ],\n                },\n                'symbol-spacing': 200,\n                'text-field': '{ref}',\n                'text-font': ['migu2m-regular'],\n                'text-rotation-alignment': 'viewport',\n                'text-size': 10,\n            },\n            paint: { 'text-color': 'rgba(0, 0, 0, 1)' },\n        },\n        {\n            id: 'airport-label-major',\n            type: 'symbol',\n            source: 'openmaptiles',\n            'source-layer': 'aerodrome_label',\n            minzoom: 10,\n            filter: ['all', ['has', 'iata']],\n            layout: {\n                'icon-image': 'airport_11',\n                'icon-size': 1,\n                'text-anchor': 'top',\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 9,\n                'text-offset': [0, 0.6],\n                'text-optional': true,\n                'text-padding': 2,\n                'text-size': 12,\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#666',\n                'text-halo-blur': 0.5,\n                'text-halo-color': '#ffffff',\n                'text-halo-width': 1,\n            },\n        },\n        {\n            id: 'place-other',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: [\n                '!in',\n                'class',\n                'city',\n                'town',\n                'village',\n                'country',\n                'continent',\n            ],\n            layout: {\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-bold'],\n                'text-letter-spacing': 0.1,\n                'text-max-width': 9,\n                'text-size': {\n                    base: 1.2,\n                    stops: [\n                        [12, 10],\n                        [15, 14],\n                    ],\n                },\n                'text-transform': 'uppercase',\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#633',\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'place-village',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: ['==', 'class', 'village'],\n            layout: {\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 8,\n                'text-size': {\n                    base: 1.2,\n                    stops: [\n                        [10, 12],\n                        [15, 22],\n                    ],\n                },\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'place-town',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: ['==', 'class', 'town'],\n            layout: {\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 8,\n                'text-size': {\n                    base: 1.2,\n                    stops: [\n                        [10, 14],\n                        [15, 24],\n                    ],\n                },\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'place-city',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: ['all', ['!=', 'capital', 2], ['==', 'class', 'city']],\n            layout: {\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 8,\n                'text-size': {\n                    base: 1.2,\n                    stops: [\n                        [7, 14],\n                        [11, 24],\n                    ],\n                },\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'place-city-capital',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: ['all', ['==', 'capital', 2], ['==', 'class', 'city']],\n            layout: {\n                'icon-image': 'star_11',\n                'icon-size': 0.8,\n                'text-anchor': 'left',\n                'text-field': '{name:latin}\\n{name:nonlatin}',\n                'text-font': ['migu2m-regular'],\n                'text-max-width': 8,\n                'text-offset': [0.4, 0],\n                'text-size': {\n                    base: 1.2,\n                    stops: [\n                        [7, 14],\n                        [11, 24],\n                    ],\n                },\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'place-country-other',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: [\n                'all',\n                ['==', 'class', 'country'],\n                ['>=', 'rank', 3],\n                ['!has', 'iso_a2'],\n            ],\n            layout: {\n                'text-field': '{name:latin}',\n                'text-font': ['migu1c-regular'],\n                'text-max-width': 6.25,\n                'text-size': {\n                    stops: [\n                        [3, 11],\n                        [7, 17],\n                    ],\n                },\n                'text-transform': 'uppercase',\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#334',\n                'text-halo-blur': 1,\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 2,\n            },\n        },\n        {\n            id: 'place-country-3',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: [\n                'all',\n                ['==', 'class', 'country'],\n                ['>=', 'rank', 3],\n                ['has', 'iso_a2'],\n            ],\n            layout: {\n                'text-field': '{name:latin}',\n                'text-font': ['migu2m-bold'],\n                'text-max-width': 6.25,\n                'text-size': {\n                    stops: [\n                        [3, 11],\n                        [7, 17],\n                    ],\n                },\n                'text-transform': 'uppercase',\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#334',\n                'text-halo-blur': 1,\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 2,\n            },\n        },\n        {\n            id: 'place-country-2',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: [\n                'all',\n                ['==', 'class', 'country'],\n                ['==', 'rank', 2],\n                ['has', 'iso_a2'],\n            ],\n            layout: {\n                'text-field': '{name:latin}',\n                'text-font': ['migu2m-bold'],\n                'text-max-width': 6.25,\n                'text-size': {\n                    stops: [\n                        [2, 11],\n                        [5, 17],\n                    ],\n                },\n                'text-transform': 'uppercase',\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#334',\n                'text-halo-blur': 1,\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 2,\n            },\n        },\n        {\n            id: 'place-country-1',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            filter: [\n                'all',\n                ['==', 'class', 'country'],\n                ['==', 'rank', 1],\n                ['has', 'iso_a2'],\n            ],\n            layout: {\n                'text-field': '{name:latin}',\n                'text-font': ['migu2m-bold'],\n                'text-max-width': 6.25,\n                'text-size': {\n                    stops: [\n                        [1, 11],\n                        [4, 17],\n                    ],\n                },\n                'text-transform': 'uppercase',\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#334',\n                'text-halo-blur': 1,\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 2,\n            },\n        },\n        {\n            id: 'place-continent',\n            type: 'symbol',\n            metadata: { 'mapbox:group': '1444849242106.713' },\n            source: 'openmaptiles',\n            'source-layer': 'place',\n            maxzoom: 1,\n            filter: ['==', 'class', 'continent'],\n            layout: {\n                'text-field': '{name:latin}',\n                'text-font': ['migu2m-bold'],\n                'text-max-width': 6.25,\n                'text-size': 14,\n                'text-transform': 'uppercase',\n                visibility: 'visible',\n            },\n            paint: {\n                'text-color': '#334',\n                'text-halo-blur': 1,\n                'text-halo-color': 'rgba(255,255,255,0.8)',\n                'text-halo-width': 2,\n            },\n        },\n        {\n            id: 'island-hoppo',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'hoppo',\n            'source-layer': 'island',\n            minzoom: 0,\n            layout: { visibility: 'visible' },\n            paint: { 'fill-color': '#fff', 'fill-opacity': 1 },\n        },\n        {\n            id: 'island-hoppo-name',\n            type: 'symbol',\n            source: 'hoppo',\n            'source-layer': 'island',\n            layout: {\n                'text-field': '{name}',\n                'text-size': {\n                    stops: [\n                        [10, 14],\n                        [15, 24],\n                    ],\n                },\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255, 255, 255, 0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'island-takeshima',\n            type: 'fill',\n            metadata: { 'mapbox:group': '1444849388993.3071' },\n            source: 'takeshima',\n            'source-layer': 'island',\n            minzoom: 0,\n            layout: { visibility: 'visible' },\n            paint: { 'fill-color': '#fff', 'fill-opacity': 1 },\n        },\n        {\n            id: 'island-takeshima-name',\n            type: 'symbol',\n            source: 'takeshima',\n            'source-layer': 'island',\n            layout: {\n                'text-field': '{name}',\n                'text-size': {\n                    stops: [\n                        [10, 14],\n                        [15, 24],\n                    ],\n                },\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255, 255, 255, 0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n        {\n            id: 'island-takeshima-poi',\n            type: 'symbol',\n            source: 'takeshima',\n            'source-layer': 'island_poi',\n            layout: {\n                'text-field': '{name}',\n                'text-font': ['migu2m-regular'],\n                'text-size': {\n                    stops: [\n                        [10, 14],\n                        [15, 24],\n                    ],\n                },\n            },\n            paint: {\n                'text-color': '#333',\n                'text-halo-color': 'rgba(255, 255, 255, 0.8)',\n                'text-halo-width': 1.2,\n            },\n        },\n    ],\n    id: 'bright',\n};\n","\nimport { defineComponent, onMounted } from 'vue';\n\nimport { MapView } from '@here/harp-mapview';\nimport { MapControls, MapControlsUI } from '@here/harp-map-controls';\nimport { GeoCoordinates, sphereProjection } from '@here/harp-geoutils';\nimport { OmvDataSource, APIFormat } from '@here/harp-omv-datasource';\nimport { Theme } from '@here/harp-datasource-protocol';\n\nimport mapbox2harp from '../../../src';\nimport { mapstyle } from './style';\n\nexport default defineComponent({\n    name: 'Harp',\n    props: {},\n    setup(props, context) {\n        const theme = mapbox2harp(mapstyle as mapboxgl.Style, 'osm');\n        console.log(theme);\n        onMounted(() => {\n            const canvas = document.getElementById(\n                'mapCanvas',\n            ) as HTMLCanvasElement;\n\n            // instantiate MapView\n            const map = new MapView({\n                canvas: canvas,\n                theme: theme as Theme,\n                projection: sphereProjection,\n                target: new GeoCoordinates(35.68, 139.77),\n                zoomLevel: 13.3,\n                minZoomLevel: 5,\n                maxZoomLevel: 18,\n            });\n\n            // add controls\n            const controls = new MapControls(map);\n\n            // add vectortile datasource\n            // https://tile.openstreetmap.jp/data/japan/{z}/{x}/{y}.pbf\n            const dataSource = new OmvDataSource({\n                baseUrl: 'https://tile.openstreetmap.jp/data/japan',\n                apiFormat: APIFormat.TomtomV1,\n                styleSetName: 'osm',\n            });\n            map.addDataSource(dataSource);\n        });\n    },\n});\n","import { render } from \"./Harp.vue?vue&type=template&id=1e5d079a&scoped=true\"\nimport script from \"./Harp.vue?vue&type=script&lang=ts\"\nexport * from \"./Harp.vue?vue&type=script&lang=ts\"\n\nimport \"./Harp.vue?vue&type=style&index=0&id=1e5d079a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-1e5d079a\"\n\nexport default script","<template>\n    <div>\n        Mapbox GL JS\n        <div id=\"mapContainer\">aaaaaaa</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted } from 'vue';\nimport { mapstyle } from './style';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nexport default defineComponent({\n    name: 'Harp',\n    props: {},\n    setup(props, context) {\n        onMounted(() => {\n            const map = new mapboxgl.Map({\n                container: 'mapContainer',\n                style: mapstyle as mapboxgl.Style,\n                center: [139.77, 35.68],\n                zoom: 12,\n                minZoom: 1,\n            });\n            map.on('click', function(e) {\n                console.log(\n                    mapstyle.layers.map((layer) => {\n                        return layer.id;\n                    }),\n                );\n                // クリックしたポイントにあるoverlayLayers全ての地物を抽出\n                const features = map.queryRenderedFeatures(e.point, {\n                    layers: mapstyle.layers.map((layer) => {\n                        return layer.id;\n                    }),\n                });\n                console.log(features);\n            });\n        });\n    },\n});\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#mapContainer {\n    height: 100%;\n    width: 100%;\n}\n</style>\n","\nimport { defineComponent, onMounted } from 'vue';\nimport { mapstyle } from './style';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nexport default defineComponent({\n    name: 'Harp',\n    props: {},\n    setup(props, context) {\n        onMounted(() => {\n            const map = new mapboxgl.Map({\n                container: 'mapContainer',\n                style: mapstyle as mapboxgl.Style,\n                center: [139.77, 35.68],\n                zoom: 12,\n                minZoom: 1,\n            });\n            map.on('click', function(e) {\n                console.log(\n                    mapstyle.layers.map((layer) => {\n                        return layer.id;\n                    }),\n                );\n                // クリックしたポイントにあるoverlayLayers全ての地物を抽出\n                const features = map.queryRenderedFeatures(e.point, {\n                    layers: mapstyle.layers.map((layer) => {\n                        return layer.id;\n                    }),\n                });\n                console.log(features);\n            });\n        });\n    },\n});\n","import { render } from \"./Mapbox.vue?vue&type=template&id=47b84754&scoped=true\"\nimport script from \"./Mapbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Mapbox.vue?vue&type=script&lang=ts\"\n\nimport \"./Mapbox.vue?vue&type=style&index=0&id=47b84754&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-47b84754\"\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport Harp from './components/Harp.vue';\nimport Mapbox from './components/Mapbox.vue';\n\nexport default defineComponent({\n    name: 'App',\n    components: {\n        Harp,\n        Mapbox,\n    },\n});\n","import { render } from \"./App.vue?vue&type=template&id=605007b7&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=605007b7&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-605007b7\"\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}